// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportStyle.Infrastructure;

#nullable disable

namespace SportStyle.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(OlimpiadasDbContext))]
    [Migration("20240919033159_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SportStyle.Domain.Entities.Carrito", b =>
                {
                    b.Property<int>("IdCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCarrito"));

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.HasKey("IdCarrito");

                    b.HasIndex("IdCliente");

                    b.ToTable("Carrito");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.CarritoProducto", b =>
                {
                    b.Property<int>("IdcarritoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdcarritoProducto"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int>("IdCarrito")
                        .HasColumnType("int");

                    b.Property<bool>("Pagado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdcarritoProducto");

                    b.HasIndex("IdCarrito");

                    b.ToTable("CarritoProducto");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("nameUSuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Deporte", b =>
                {
                    b.Property<int>("IdDeporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDeporte"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdDeporte");

                    b.ToTable("Deporte");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.DeporteDivision", b =>
                {
                    b.Property<int>("IdDeporteDiv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDeporteDiv"));

                    b.Property<int>("IdDeporte")
                        .HasColumnType("int");

                    b.HasKey("IdDeporteDiv");

                    b.HasIndex("IdDeporte");

                    b.ToTable("DeporteDivision");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Division", b =>
                {
                    b.Property<int>("IdDiv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDiv"));

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdDiv");

                    b.ToTable("Division");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<decimal>("Acumulado")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("FacturaPagadoTotal")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("FechaFactura")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaPagar")
                        .HasColumnType("date");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoAbonar")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("NumCuotas")
                        .HasColumnType("int");

                    b.Property<bool>("Pagado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdFactura");

                    b.HasIndex("IdPedido");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.HistorialPedido", b =>
                {
                    b.Property<int>("IdPedidoH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPedidoH"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Entregado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("FechaEntregado")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaPedido")
                        .HasColumnType("date");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("MetodoDePago")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPedidoH");

                    b.HasIndex("IdCliente");

                    b.ToTable("HistorialPedido");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.MetodoDePago", b =>
                {
                    b.Property<int>("IdMetodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMetodo"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdMetodo");

                    b.ToTable("MetodoDePago");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CodigoP")
                        .HasColumnType("int");

                    b.Property<bool>("Entregado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("FechaEntrega")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaPedido")
                        .HasColumnType("date");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdMetodoDePago")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoT")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMetodoDePago");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.PedidoProducto", b =>
                {
                    b.Property<int>("IdPedidoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPedidoProducto"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.HasKey("IdPedidoProducto");

                    b.HasIndex("IdPedido");

                    b.ToTable("PedidoProducto");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Cuotas")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("FechaPublicacion")
                        .HasColumnType("date");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdDeporteDiv")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Talle")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdDeporteDiv");

                    b.HasIndex("IdTipo");

                    b.ToTable("Producto");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdRol");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Tipo", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTipo"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdTipo");

                    b.ToTable("Tipo");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.UsuarioNoValido", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("nameUSuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCliente");

                    b.ToTable("UsuarioNoValido");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.HistorialPedidoAnulado", b =>
                {
                    b.HasBaseType("SportStyle.Domain.Entities.HistorialPedido");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("HistorialPedidoAnulado");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.HistorialProducto", b =>
                {
                    b.HasBaseType("SportStyle.Domain.Entities.Producto");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("HistorialProducto");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Carrito", b =>
                {
                    b.HasOne("SportStyle.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.CarritoProducto", b =>
                {
                    b.HasOne("SportStyle.Domain.Entities.Carrito", "Carrito")
                        .WithMany()
                        .HasForeignKey("IdCarrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.DeporteDivision", b =>
                {
                    b.HasOne("SportStyle.Domain.Entities.Deporte", "Deporte")
                        .WithMany()
                        .HasForeignKey("IdDeporte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deporte");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Factura", b =>
                {
                    b.HasOne("SportStyle.Domain.Entities.Pedido", "pedido")
                        .WithMany()
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.HistorialPedido", b =>
                {
                    b.HasOne("SportStyle.Domain.Entities.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("SportStyle.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportStyle.Domain.Entities.MetodoDePago", "MetodoDePago")
                        .WithMany()
                        .HasForeignKey("IdMetodoDePago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("MetodoDePago");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.PedidoProducto", b =>
                {
                    b.HasOne("SportStyle.Domain.Entities.Pedido", "pedido")
                        .WithMany()
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.Producto", b =>
                {
                    b.HasOne("SportStyle.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportStyle.Domain.Entities.DeporteDivision", "deporteDivision")
                        .WithMany()
                        .HasForeignKey("IdDeporteDiv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportStyle.Domain.Entities.Tipo", "tipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("deporteDivision");

                    b.Navigation("tipo");
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.HistorialPedidoAnulado", b =>
                {
                    b.HasOne("SportStyle.Domain.Entities.HistorialPedido", null)
                        .WithOne()
                        .HasForeignKey("SportStyle.Domain.Entities.HistorialPedidoAnulado", "IdPedidoH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportStyle.Domain.Entities.HistorialProducto", b =>
                {
                    b.HasOne("SportStyle.Domain.Entities.Producto", null)
                        .WithOne()
                        .HasForeignKey("SportStyle.Domain.Entities.HistorialProducto", "Codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
