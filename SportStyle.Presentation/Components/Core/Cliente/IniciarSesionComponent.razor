@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@using System.Net
@using System.Net.Http
@using System.Net.Http.Json

<h3>Iniciar Sesión</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit" FormName="loginForm">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label for="email">Email:</label>
		<InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
	</div>

	<div class="form-group">
		<label for="password">Contraseña:</label>
		<InputText id="password" @bind-Value="loginModel.Password" class="form-control" />
	</div>

	<button type="submit" class="btn btn-primary">Iniciar sesión</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="alert alert-danger">@errorMessage</div>
}

@code {
	private LoginModel loginModel = new LoginModel();
	private string? errorMessage;

	private async Task HandleValidSubmit()
	{
		try
		{
			var client = HttpClientFactory.CreateClient("apiClient");
			var requestUri = client.BaseAddress + "api/v1.0/Cliente/IniciarSesion";
			Console.WriteLine($"Enviando solicitud de inicio de sesión a: {requestUri}");
			Console.WriteLine($"Email: {loginModel.Email}");
			var response = await client.PostAsJsonAsync(requestUri, loginModel);
			Console.WriteLine($"Respuesta recibida: {response.StatusCode}");
			if (response.StatusCode == HttpStatusCode.OK)
			{
				// Autenticación exitosa
				NavigationManager.NavigateTo("/");
			}
			else
			{
				// Autenticación fallida
				errorMessage = "Correo o contraseña incorrectos.";
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.Message);
			errorMessage = "Error al iniciar sesión: " + ex.Message;
		}
	}

	public class LoginModel
	{
		public string? Email { get; set; }
		public string? Password { get; set; }
	}
}